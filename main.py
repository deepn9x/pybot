from distutils.util import execute
import imp
import ssl
from time import sleep
from xmlrpc.client import Boolean
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor
import aiohttp
import json

#from telegram import ReplyKeyboardRemove
from db import Database
import markup as nav

# tokenOld='5315163231:AAHgp23m6BxpWDJbmL1RYUnu3bIW_4gW5Zg' 
#token='5456922852:AAFiLYVEqH6iI82TugailS7OVW6DPz9kLn8'
token = '5351233076:AAE2I51jWb3eQTayIRTe3KiZo2-vWkVjmCQ'


bot = Bot(token=token)
dp = Dispatcher(bot)

db = Database('akim.db')

cats = ['–í–æ–ø—Ä–æ—Å—ã –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∂–∏–ª—å—ë–º', 
'–í–æ–ø—Ä–æ—Å—ã —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è',
'–í–æ–ø—Ä–æ—Å—ã –∫–æ–º–º—É–Ω–∞–ª—å–Ω–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞',
'–í–æ–ø—Ä–æ—Å—ã –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è',
'–í–æ–ø—Ä–æ—Å—ã –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è',
'–û –≤–æ–ø—Ä–æ—Å–∞—Ö –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞',
'–í–æ–ø—Ä–æ—Å—ã —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞',
'–ó–µ–º–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
'–§–∞–∫—Ç—ã –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ª—É–∂–µ–±–Ω–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è',
'–°–æ–±–ª—é–¥–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å–Ω–æ–π –∏ –ø—Ä–∞–≤–æ–≤–æ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã',
'–û –¥—Ä—É–≥–∏—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö'
]

# @dp.message_handler(content_types=["new_chat_members"])
# async def handler_new_member(message):
#     user_name = message.new_chat_member.first_name
#     await bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0}!".format(user_name))

# @dp.message_handler(commands=['start'])
# async def start(message: types.Message):
#     await bot.send_message(message.from_user.id, "üíÅüèª‚Äç‚ôÄÔ∏èüìù\n–î–∞—É—ã—Å –±–µ—Ä–µ—Ç—ñ–Ω —É—á–∞—Å–∫–µ“£—ñ–∑–¥—ñ —Ç–∞–±—É “Ø—à—ñ–Ω ”©–∑—ñ“£—ñ–∑–¥—ñ“£ –ñ–°–ù-—ñ“£—ñ–∑–¥—ñ (–∂–µ–∫–µ —Å”ô–π–∫–µ—Å—Ç–µ–Ω–¥—ñ—Ä—É –Ω”©–º—ñ—Ä—ñ) –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑. –ñ–°–ù 12 —Å–∞–Ω–Ω–∞–Ω —Ç“±—Ä—É—ã —Ç–∏—ñ—Å. \n\n–î–ª—è –ø–æ–∏—Å–∫–∞ —É—á–∞—Å—Ç–∫–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ –í–∞—à –ò–ò–ù (–∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–æ–Ω–Ω—ã–π –Ω–æ–º–µ—Ä). –ò–ò–ù –¥–æ–ª–∂–µ–Ω —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ 12 —Ü–∏—Ñ—Ä.")

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    lang = '–¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ \n–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫'
    db.insert_user(message.from_user.id, '')
    if not db.selectedCat(message.from_user.id)[3]:
        await bot.send_message(message.from_user.id, lang, parse_mode=types.ParseMode.HTML, reply_markup=nav.inline_kb1)

@dp.callback_query_handler()
async def process_callback_button1(callback_query: types.CallbackQuery):
    db.setLang(callback_query.from_user.id, callback_query.data)

    if db.getLang(callback_query.from_user.id) == "“ö–∞–∑–∞“õ—à–∞":
        await bot.send_message(callback_query.from_user.id, "–ê—Ç—ã-–∂”©–Ω—ñ“£—ñ–∑–¥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑")
    elif db.getLang(callback_query.from_user.id) == "–†—É—Å—Å–∫–∏–π":
         await bot.send_message(callback_query.from_user.id, "–£–∫–∞–∂–∏—Ç–µ –í–∞—à–µ –§–ò–û")
    
@dp.message_handler()
async def response_message(msg: types.Message):

    if msg.text == "“ö–∞–∑–∞“õ—à–∞" or db.getLang(msg.from_user.id) == "“ö–∞–∑–∞“õ—à–∞":
        if msg.text == "“ö–∞–∑–∞“õ—à–∞":
            db.setLang(msg.from_user.id, "“ö–∞–∑–∞“õ—à–∞")
            await bot.send_message(msg.from_user.id, "–ê—Ç—ã-–∂”©–Ω—ñ“£—ñ–∑–¥—ñ –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑")
        
        else:

            if not db.userFioExists(msg.from_user.id):
                db.update_user(msg.from_user.id, msg.text)
                # await bot.send_message(msg.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=nav.mainMenu)

            if msg.text == '1':
                db.updateCat(1, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '2':
                db.updateCat(2, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '3':
                db.updateCat(3, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '4':
                db.updateCat(4, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '5':
                db.updateCat(5, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '6':
                db.updateCat(6, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '7':
                db.updateCat(7, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '8':
                db.updateCat(8, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '9':
                db.updateCat(9, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '10':
                db.updateCat(10, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '11':
                db.updateCat(11, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)

            if msg.text == '12':
                db.updateCat(12, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)
                    
            else:
                catSelected = db.selectedCat(msg.from_user.id)
                if catSelected[3] is None:
                    await bot.send_message(msg.from_user.id, "–°“±—Ä–∞“ì—ã“£—ã–∑–¥—ã“£ —Å–∏–ø–∞—Ç—ã–Ω —Ç–∞“£–¥–∞“£—ã–∑", parse_mode=types.ParseMode.HTML)
                    await bot.send_message(msg.from_user.id, "1‚É£ –¢“±—Ä“ì—ã–Ω “Ø–π –±–µ—Ä—É üè†\n2‚É£ –ñ“±–º—ã—Å–ø–µ–Ω “õ–∞–º—Ç—É –∂”ô–Ω”ô ”ô–ª–µ—É–º–µ—Ç—Ç—ñ–∫ “õ–∞–º—Å—ã–∑–¥–∞–Ω–¥—ã—Ä—É –º”ô—Å–µ–ª–µ–ª–µ—Ä—ñ üìÑ\n3‚É£ –ö–æ–º–º—É–Ω–∞–ª–¥—ã“õ —à–∞—Ä—É–∞—à—ã–ª—ã“õ –º”ô—Å–µ–ª–µ–ª–µ—Ä—ñ üö∞\n4‚É£ –ë—ñ–ª—ñ–º –±–µ—Ä—É –º”ô—Å–µ–ª–µ–ª–µ—Ä—ñ üë®üèª‚Äçüéì\n5‚É£ –î–µ–Ω—Å–∞—É–ª—ã“õ —Å–∞“õ—Ç–∞—É –º”ô—Å–µ–ª–µ–ª–µ—Ä—ñ üè•\n6‚É£ –ö”ô—Å—ñ–ø–∫–µ—Ä–ª—ñ–∫ –º”ô—Å–µ–ª–µ–ª–µ—Ä—ñ üè¶\n7‚É£ –ê—É—ã–ª—à–∞—Ä—É–∞—à—ã–ª—ã“ì—ã –º”ô—Å–µ–ª–µ–ª–µ—Ä—ñ üåΩ\n8‚É£ –ñ–µ—Ä –º”ô—Å–µ–ª–µ—Å—ñ üåè\n9‚É£ “ö—ã–∑–º–µ—Ç –±–∞–±—ã–Ω —Ç–µ—Ä—ñ—Å –ø–∞–π–¥–∞–ª–∞–Ω—É –¥–µ—Ä–µ–∫—Ç–µ—Ä—ñ üôÖüèª‚Äç‚ôÇÔ∏è\n1‚É£0‚É£ –ó–∞“£–¥—ã–ª—ã“õ –∂”ô–Ω–µ “õ“±“õ—ã“õ—Ç—ã“õ —Ç”ô—Ä—Ç—ñ–ø—Ç—ñ —Å–∞“õ—Ç–∞—É ‚öñ\n1‚É£1‚É£ –ú”ô–¥–µ–Ω–∏–µ—Ç —Å–∞–ª–∞—Å—ã –º”ô—Å–µ–ª–µ–ª–µ—Ä—ñ üé≠\n1‚É£2‚É£ –ë–∞—Å“õ–∞ –¥–∞ –º”ô—Å–µ–ª–µ–ª–µ—Ä –∂”©–Ω—ñ–Ω–¥–µ ‚ùî", parse_mode=types.ParseMode.HTML)
                else:
                    if not db.getLastQuest(msg.from_user.id):
                        if not msg.text.isnumeric():
                            db.setQuestion(msg.from_user.id, msg.text)
                            await bot.send_message(msg.from_user.id, "–†–∞—Ö–º–µ—Ç, –°—ñ–∑–¥—ñ“£ —Å“±—Ä–∞“ì—ã“£—ã–∑ “õ–∞–±—ã–ª–¥–∞–Ω–¥—ã. –¢–∞“ì—ã —Å“±—Ä–∞“õ “õ–æ—é “Ø—à—ñ–Ω /start –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)
                    else:
                        await bot.send_message(msg.from_user.id, "–¢–∞“ì—ã —Å“±—Ä–∞“õ “õ–æ—é “Ø—à—ñ–Ω /start –±–∞—Ç—ã—Ä–º–∞—Å—ã–Ω –±–∞—Å—ã“£—ã–∑", parse_mode=types.ParseMode.HTML)
    
    elif msg.text == "–†—É—Å—Å–∫–∏–π" or db.getLang(msg.from_user.id) == "–†—É—Å—Å–∫–∏–π":
        if msg.text == "–†—É—Å—Å–∫–∏–π":
            db.setLang(msg.from_user.id, "–†—É—Å—Å–∫–∏–π")
            await bot.send_message(msg.from_user.id, "–í–∞—à –§–∞–º–∏–ª–∏—è –ò–º—è")
        
        else:

            if not db.userFioExists(msg.from_user.id):
                db.update_user(msg.from_user.id, msg.text)
                # await bot.send_message(msg.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é", reply_markup=nav.mainMenu)

            if msg.text == '1':
                db.updateCat(1, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '2':
                db.updateCat(2, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '3':
                db.updateCat(3, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '4':
                db.updateCat(4, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '5':
                db.updateCat(5, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)
                
            elif msg.text == '6':
                db.updateCat(6, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '7':
                db.updateCat(7, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '8':
                db.updateCat(8, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '9':
                db.updateCat(9, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '10':
                db.updateCat(10, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '11':
                db.updateCat(11, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)

            elif msg.text == '12':
                db.updateCat(12, msg.from_user.id)
                await bot.send_message(msg.from_user.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)


                                
                    
            else:
                catSelected = db.selectedCat(msg.from_user.id)
                if catSelected[3] is None:
                    await bot.send_message(msg.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä –í–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞", parse_mode=types.ParseMode.HTML)
                    await bot.send_message(msg.from_user.id, "1‚É£ –í–æ–ø—Ä–æ—Å—ã –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è –∂–∏–ª—å—ë–º üè†\n2‚É£ –í–æ–ø—Ä–æ—Å—ã —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –æ–±–µ—Å–ø–µ—á–µ–Ω–∏—è üìÑ\n3‚É£ –í–æ–ø—Ä–æ—Å—ã –∫–æ–º–º—É–Ω–∞–ª—å–Ω–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ üö∞\n4‚É£ –í–æ–ø—Ä–æ—Å—ã –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è üë®üèª‚Äçüéì\n5‚É£ –í–æ–ø—Ä–æ—Å—ã –∑–¥—Ä–∞–≤–æ–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è üè•\n6‚É£ –í–æ–ø—Ä–æ—Å—ã –ø—Ä–µ–¥–ø—Ä–∏–Ω–∏–º–∞—Ç–µ–ª—å—Å—Ç–≤–∞ üè¶\n7‚É£ –í–æ–ø—Ä–æ—Å—ã —Å–µ–ª—å—Å–∫–æ–≥–æ —Ö–æ–∑—è–π—Å—Ç–≤–∞ üåΩ\n8‚É£ –ó–µ–º–µ–ª—å–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã üåè\n9‚É£ –§–∞–∫—Ç—ã –Ω–µ–Ω–∞–¥–ª–µ–∂–∞—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ª—É–∂–µ–±–Ω–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è üôÖüèª‚Äç‚ôÇÔ∏è\n1‚É£0‚É£ –°–æ–±–ª—é–¥–µ–Ω–∏–µ –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å–Ω–æ–π –∏ –ø—Ä–∞–≤–æ–≤–æ–π –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã ‚öñ\n1‚É£1‚É£ –í–æ–ø—Ä–æ—Å—ã —Å—Ñ–µ—Ä—ã –∫—É–ª—å—Ç—É—Ä—ã üé≠\n1‚É£2‚É£ –î—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã ‚ùî", parse_mode=types.ParseMode.HTML)

                else:
                    if not db.getLastQuest(msg.from_user.id):
                        if not msg.text.isnumeric():
                            db.setQuestion(msg.from_user.id, msg.text)
                        await bot.send_message(msg.from_user.id, "–°–ø–∞—Å–∏–±–æ, –í–∞—à –≤–æ–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç. –ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–∂–º–∏—Ç–µ /start", parse_mode=types.ParseMode.HTML)
                    else:
                        await bot.send_message(msg.from_user.id, "–ß—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–∞–∂–º–∏—Ç–µ /start", parse_mode=types.ParseMode.HTML)



    
    # else:
    #     await bot.send_message(msg.from_user.id, "–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤–æ–ø—Ä–æ—Å", parse_mode=types.ParseMode.HTML)




if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
